<UserControl
    x:Class="xpra.ApControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:local="clr-namespace:xpra"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="300">

    <UserControl.Resources>
        
        <!--<CollectionViewSource x:Key="cvs" 
                              Source="{Binding SelectedConnection.ApList}" 
                              IsLiveGroupingRequested="True"
                              >
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="Display" />
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>
        <local:DisplayToStatusConverter x:Key="displayToStatusConverter" />
        <local:DisplayToActionTextConverter x:Key="displayToActionTextConverter" />-->
    </UserControl.Resources>


    <Grid IsEnabled="{Binding IsWorking, Converter={local:NegateBoolConverter}}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto" />
 
        </Grid.RowDefinitions>
        <ComboBox
                ItemsSource="{Binding ConnectionList}" 
                SelectedItem="{Binding SelectedConnection}"
                materialDesign:HintAssist.FloatingScale="0.50"
                Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                SelectionChanged="ComboBox_SelectionChanged"
                FontSize="24">
        </ComboBox>
        <DockPanel Grid.Row="1" Margin="0 10 0 10">
            <TextBlock DockPanel.Dock="Left"
                    Text="{Binding SelectedConnection.UrlDisplay}"
                    Margin="0,10" />
            <!--<Button Content="Settings"
                DockPanel.Dock="Right"
                Command="{Binding ShowPageCommand}"
                CommandParameter="{x:Static local:Page.Settings}"
                Style="{StaticResource MaterialDesignFlatButton}"
                HorizontalAlignment="Right"/>-->
            <Button Content="{Binding SelectedConnection.ConnectButtonText}"
                DockPanel.Dock="Right"
                Margin="0,0,10,0"
                Command="{Binding ConnectDisconnectCommand}"
                Style="{StaticResource MaterialDesignFlatButton}"
                HorizontalAlignment="Right" />
            <Button Content="CLOSE ALL APPS"
                DockPanel.Dock="Right"
                Command="{Binding CloseAllAppsCommand}"
                Style="{StaticResource MaterialDesignFlatButton}"
                HorizontalAlignment="Right"/>
        </DockPanel>

        <local:StretchingTreeView Grid.Row="2"
                                  Padding="0 0 20 0"
                                  x:Name="MainTreeView" HorizontalAlignment="Stretch" 
                                  Margin="10" VerticalAlignment="Stretch" 
                                  HorizontalContentAlignment="Stretch"
                                  BorderBrush="Transparent"
                                  Background="{DynamicResource MaterialDesignPaper}"
                                  ItemsSource="{Binding SelectedConnection.DisplayList}">

            <local:StretchingTreeView.Resources>
                
                <Style x:Key="hoverItemStyle" TargetType="Border">
                    <!--<Style.Resources>
                        <SolidColorBrush x:Key="hoverBrush" Color="#dae8f0"/>
                    </Style.Resources>-->
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self},
                                                Path=IsMouseOver}" Value="True"/>
                                <!--<Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=local:StretchingTreeViewItem},
                                                Path=IsSelected}" Value="False"/>-->
                            </MultiDataTrigger.Conditions>
                            <!--<Setter Property="Background" Value="#ffe5f3fb"/>-->
                            <Setter Property="CornerRadius" Value="4"/>
                            <!--<Setter Property="BorderBrush" Value="#6cbce3"/>-->
                            <Setter Property="Background" Value="#dae8f0"/>
                            <!--<Setter Property="BorderThickness" Value="1.5"/>-->
                        </MultiDataTrigger>
                        <!--<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem},
                                                Path=IsSelected}" Value="True">
                            <Setter Property="CornerRadius" Value="4"/>
                            <Setter Property="BorderBrush" Value="Red"/>
                            <Setter Property="Background" Value="{DynamicResource hoverBrush}"/>
                        </DataTrigger>-->
                    </Style.Triggers>
                
                </Style>
                <HierarchicalDataTemplate DataType="{x:Type local:Display}" ItemsSource="{Binding ApList}">
                    <Border  BorderBrush="Gray" 
                             BorderThickness="1" 
                             CornerRadius="4"
                             Style="{StaticResource hoverItemStyle}">
                        <Grid Margin="4">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <materialDesign:PackIcon Kind="AppleAirplay"
                                                     Margin="10"
                                                     Width="30" Height="30" 
                                                    Foreground="{Binding IconColor}"/>
                            <StackPanel Orientation="Horizontal" Grid.Column="1">
                                <TextBlock Text="DISPLAY  :" Margin="10 15 0 0" />
                                <TextBlock Text="{Binding Id}" Margin="0 15 10 0" />
                                <TextBlock Text="{Binding StatusText}" Margin="10 15 0 0"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Grid.Column="2">
                                <Button
                                    ToolTip="Stop Display"
                                    Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeView}},
                                        Path=DataContext.StopCommand}" 
                                    CommandParameter="{Binding Id}"
                                    Style="{StaticResource MaterialDesignIconButton}"
                                    Visibility="{Binding StopButtonEnabled, Converter={local:BoolToVis}}"
                                    IsEnabled="{Binding IsCheckingStatus, Converter={local:NegateBoolConverter}}">
                                    <materialDesign:PackIcon Kind="Stop" Width="30" Height="30" Foreground="Red"/>
                                </Button>
                                <Button 
                                    ToolTip="Pause Display (Detatch)"
                                    Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeView}},
                                        Path=DataContext.PauseCommand}" 
                                    CommandParameter="{Binding Id}"
                                    Style="{StaticResource MaterialDesignIconButton}"                                    
                                    Visibility="{Binding PauseButtonEnabled, Converter={local:BoolToVis}}"
                                    IsEnabled="{Binding IsCheckingStatus, Converter={local:NegateBoolConverter}}">
                                    <materialDesign:PackIcon Kind="Pause" Width="30" Height="30" Foreground="Purple"/>
                                </Button>
                                <Button 
                                    ToolTip="Resume Display (Attach)"
                                    Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeView}},
                                        Path=DataContext.ResumeCommand}" 
                                    CommandParameter="{Binding Id}"
                                    Style="{StaticResource MaterialDesignIconButton}"                                    
                                    Visibility="{Binding ResumeButtonEnabled, Converter={local:BoolToVis}}"
                                    IsEnabled="{Binding IsCheckingStatus, Converter={local:NegateBoolConverter}}">
                                    <materialDesign:PackIcon Kind="PlayPause" Width="30" Height="30" Foreground="Green"/>
                                </Button>
                                <Button
                                    ToolTip="Start Display"
                                    Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeView}},
                                        Path=DataContext.PlayCommand}" 
                                    CommandParameter="{Binding Id}"                                    
                                    Style="{StaticResource MaterialDesignIconButton}"
                                    Visibility="{Binding PlayButtonEnabled, Converter={local:BoolToVis}}"
                                    IsEnabled="{Binding IsCheckingStatus, Converter={local:NegateBoolConverter}}">
                                    <materialDesign:PackIcon Kind="Play" Width="30" Height="30" Foreground="Green" />
                                </Button>
                            </StackPanel>
                        </Grid>
                    </Border>
                </HierarchicalDataTemplate>
                <DataTemplate DataType="{x:Type local:Ap}">
                    <Border CornerRadius="4" Style="{StaticResource hoverItemStyle}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <materialDesign:PackIcon Kind="CogOutline"
                                                     Width="30" Height="30" 
                                                     Margin="0 20 0 0"
                                                     Foreground="{Binding RunButtonColor}"/>
                            <StackPanel Margin="10 0 0 0" Grid.Column="1">
                                <Grid Margin="0 10 10 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="80"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{Binding Name}" 
                                                Style="{StaticResource MaterialDesignHeadline6TextBlock}"
                                               VerticalAlignment="Bottom"/>
                                    <TextBlock Text="{Binding StatusText}"  
                                               Grid.Column="1" Margin="10 0 40 0" VerticalAlignment="Bottom"/>
                                    <Button Content="{Binding RunButtonText}"
                                            VerticalAlignment="Bottom"
                                            Grid.Column="2" 
                                            Width="80"
                                            Height="30"
                                            Background="{Binding RunButtonColor }"
                                            BorderBrush="{Binding RunButtonColor }"
                                            Margin="0 4 0 0"    
                                            Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeView}},
                                                Path=DataContext.RunApCommand}" 
                                            CommandParameter="{Binding}" >
                                    </Button>
                                </Grid>
                                <Border Margin="0,4,10,0" 
                                        BorderThickness="1" 
                                        BorderBrush="{DynamicResource MaterialDesignDivider}"/>
                                <TextBlock                                     
                                    Text="{Binding Path}"                                    
                                    Margin="0 2 0 10"
                                    Style="{StaticResource MaterialDesignBody2TextBlock}" Foreground="Gray"/>
                            </StackPanel>
                        </Grid>
                    </Border>
                </DataTemplate>
                <!--<SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"  Opacity=".2" Color="{x:Static SystemColors.HotTrackColor}" />-->
                <!--<SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"  Color="#c2dfec" />-->
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"  Color="#c2dfec" />
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="Black" />
                <!--<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"  Color="Transparent" />-->
                <!--<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}"  Color="Black" />-->



            </local:StretchingTreeView.Resources>
            <local:StretchingTreeView.ItemContainerStyle>
                <Style TargetType="local:StretchingTreeViewItem">
                    <Setter Property="IsExpanded" Value="True" />
                    <Setter Property="Margin" Value="10 10 0 0" />
                    <Setter Property="Padding" Value="0" />
                    <!--<Setter Property="BorderThickness" Value="1"/>-->
                    <!--<Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="BorderBrush" Value="#81c3e5"/>
                        </Trigger>
                    </Style.Triggers>-->
                    <Style.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="4"/>
                            <!--<Setter Property="BorderBrush" Value="Green"/>-->
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:StretchingTreeViewItem},
                                                Path=IsSelected}" Value="True">
                                    <Setter Property="BorderBrush" Value="Red"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Style.Resources>
                </Style>                
            </local:StretchingTreeView.ItemContainerStyle>


        </local:StretchingTreeView>

        <StackPanel Grid.Row="3">
            <TextBlock Text="{Binding Message}"
                       Visibility="{Binding IsWorking, Converter={local:BoolToVis}}"   />
            <Grid Height="20">
                <ProgressBar Height="4"
                             Visibility="{Binding IsWorking, Converter={local:BoolToVis}}"                    
                             IsIndeterminate="True"/>
            </Grid>
        </StackPanel>
    </Grid>
</UserControl>
